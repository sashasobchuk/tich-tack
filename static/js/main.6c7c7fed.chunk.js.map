{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Modal","props","className","style","display","modal","type","onClick","setModal","value","App","useState","Array","fill","state","setState","n","setN","name1","setName1","name2","setName2","firstDisplay","setFirstDisplay","score","setScore","winCombination","isWiner","setTimeout","every","element","index","array","i","length","a","b","c","Number","console","log","placeholder","onChange","e","currentTarget","map","item","newState","clickHandler","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAIMA,EAAO,SAACC,GACV,OACI,sBAAKC,UAAU,QAAQC,MAAO,CAACC,QAAQH,EAAMI,MAAM,IAAnD,UACA,oCAAOJ,EAAMI,MAAM,MACf,uBAAOC,KAAK,SAASC,QAAS,WAAKN,EAAMO,SAAS,CAAE,CAAC,QAAQ,MAAOC,MAAM,4EAgGvEC,EA7FH,WAAO,IAAD,EAEUC,mBAASC,MAAM,GAAGC,KAAK,OAFjC,mBAETC,EAFS,KAEFC,EAFE,OAGEJ,mBAAS,GAHX,mBAGTK,EAHS,KAGNC,EAHM,OAIUN,mBAAS,SAJnB,mBAITO,EAJS,KAIFC,EAJE,OAKUR,mBAAS,SALnB,mBAKTS,EALS,KAKFC,EALE,OAMwBV,oBAAS,GANjC,mBAMTW,EANS,KAMKC,EANL,OAOOZ,mBAAS,CAAC,EAAE,IAPnB,mBAOTa,EAPS,KAOHC,EAPG,OAQSd,mBAAS,CAAC,OAAO,mCAR1B,mBAQTN,EARS,KAQHG,EARG,KAWRkB,EAAiB,CACf,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAUC,YAAW,WAMvB,GAAId,EAAMe,OAJV,SAAiBC,EAASC,EAAOC,GAC7B,OAAmB,OAAZF,KAMP,OAFAf,EAASH,MAAM,GAAGC,KAAK,OAAOI,EAAK,QACnCT,EAAS,CAAC,QAAQ,mCAItB,IAAK,IAAIyB,EAAG,EAAEA,EAAEP,EAAeQ,OAAOD,IAAI,CAAC,IAAD,cACpBP,EAAeO,GADK,GAC/BE,EAD+B,KAC5BC,EAD4B,KACzBC,EADyB,KAEtC,GAAIvB,EAAMqB,IAAMrB,EAAMqB,KAAOrB,EAAMsB,IAAMtB,EAAMqB,KAAOrB,EAAMuB,GAAG,CAEzDZ,EADDT,EAAI,IAAM,EACA,CAAC,CAACsB,OAAOd,EAAM,IAAIc,OAAO,IAAId,EAAM,IACpC,CAACA,EAAM,GAAG,CAACc,OAAOd,EAAM,IAAIc,OAAO,MAC9CC,QAAQC,IAAI,OACZhC,EAAS,CAAC,QAAD,gDAAoBQ,EAAI,IAAM,EAAIE,EAAOE,KAElDL,EAASH,MAAM,GAAGC,KAAK,OAAOI,EAAK,GACnC,UAGV,IAWF,GAAGK,EAAa,CAUZ,OAAQ,sBAAKpB,UAAU,eAAf,UACD,0CACH,uBAAOI,KAAK,OAAOmC,YAAY,QAAQhC,MAAOS,EAAOwB,SARjC,SAACC,GACrBxB,EAASwB,EAAEC,cAAcnC,UAO2D,uBACpF,uBAAOH,KAAK,OAAOmC,YAAY,QAAQhC,MAAOW,EAAOsB,SANjC,SAACC,GACrBtB,EAASsB,EAAEC,cAAcnC,UAK2D,uBACpF,uBAAOH,KAAK,SAASG,MAAM,OAAOF,QAbrB,WACbgB,GAAgB,SAgBxB,OACI,sBAAKrB,UAAU,WAAf,UAEI,qBAAKA,UAAU,OAAf,SACKY,EAAM+B,KAAI,SAACC,EAAKf,GAAN,OACP,sBAAKxB,QAAS,YAhCV,SAACwB,GAClB,GAAmB,OAAhBjB,EAAMiB,GAAgB,CACrB,IAAIgB,EAAQ,YAAOjC,GACnBiC,EAAShB,GAAUf,EAAI,IAAM,EAAK,IAAM,IACxCD,EAASgC,GACT9B,EAAKD,EAAI,GACTY,YAAW,kBAAKD,IAAQ,MA0BIqB,CAAajB,IAAqB7B,UAAU,OAA/D,UAAsE,qCAAQY,EAAMiB,MAApF,OAA8CA,QAGtD,sBAAK7B,UAAU,QAAf,oBACI,oCAAOgB,EAAP,MAAiBM,EAAM,GAAG,EAA1B,OACA,oCAAOJ,EAAP,MAAiBI,EAAM,GAAG,EAA1B,UAEJ,cAAC,EAAD,CAAOnB,MAAOA,EAAOG,SAAUA,EAASyC,K,iBCtFrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c7c7fed.chunk.js","sourcesContent":["import React, {useRef, useState} from 'react';\nimport './App.css'\n\n\nconst Modal =(props)=>{\n    return (\n        <div className='modal' style={{display:props.modal[0]}}>\n        <h1>  {props.modal[1]}</h1>\n            <input type=\"button\" onClick={()=>{props.setModal([ ['none'],[]])}} value='наступна гра'/>\n    </div>)\n}\nconst App = () => {\n\n    let [state, setState] = useState(Array(9).fill(null))\n    let [n, setN] = useState(0)\n    let [name1, setName1] = useState('name1')\n    let [name2, setName2] = useState('name2')\n    let [firstDisplay, setFirstDisplay] = useState(true)\n    let [score,setScore]=useState([0,0])\n    let [modal,setModal] = useState(['none','нічия'])\n\n\n    const winCombination = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ]\n    const isWiner = setTimeout(()=>{\n        /** checking on no_winer */\n        function isSeted(element, index, array) {\n            return element !== null;\n        }\n        // console.log(state)\n        if (state.every(  isSeted )){\n            setState(Array(9).fill(null));setN(0)\n            setModal(['block','нічия'])\n            return\n        }\n            /** cheking on winner */\n        for (let i =0;i<winCombination.length;i++){\n            const [a, b, c] = winCombination[i];\n            if( state[a] && state[a] === state[b] && state[a] === state[c]){\n                (n % 2 === 0)\n                ? setScore([[Number(score[0])+Number(1)],score[1]])\n                : setScore([score[0],[Number(score[1])+Number(1)]])\n                console.log('win')\n                setModal(['block',` виграв ${n % 2 === 0 ? name1: name2}`])\n\n                setState(Array(9).fill(null));setN(0)\n                break\n            }else{}\n        }\n    },10)\n\n    const  clickHandler=(index)=> {\n       if(state[index] ===null) {\n           let newState = [...state];\n           newState[index] = (n % 2 === 0) ? \"x\" : \"o\"\n           setState(newState)\n           setN(n + 1)\n           setTimeout(()=> isWiner,100)\n       }else { }\n    }\n    if(firstDisplay){\n        let nextHandler =()=>{\n            setFirstDisplay(false)\n        }\n        let changeNameHandler1 =(e)=>{\n            setName1(e.currentTarget.value)\n        }\n        let changeNameHandler2 =(e)=>{\n            setName2(e.currentTarget.value)\n        }\n        return (<div className='firstDisplay'>\n               <h1> names: </h1>\n            <input type=\"text\" placeholder='name1' value={name1} onChange={changeNameHandler1}/><br/>\n            <input type=\"text\" placeholder='name2' value={name2} onChange={changeNameHandler2}/><br/>\n            <input type=\"button\" value='next' onClick={ nextHandler}/>\n\n        </div>)\n    }\n    return (\n        <div className='fullPage'>\n\n            <div className='game'>\n                {state.map((item,index)=>(\n                    <div onClick={()=>{clickHandler(index)}} key={index} className='item'><span> {state[index]}</span>  </div>))}\n            </div>\n\n            <div className=\"count\"> score:\n                <div> {name1} : {score[0]/2} </div>\n                <div> {name2} : {score[1]/2} </div>\n            </div>\n            <Modal modal={modal} setModal={setModal.bind(this)}/>\n\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}